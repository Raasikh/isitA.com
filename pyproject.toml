[project]
name = "isita-com"
version = "0.1.0"
description = "Creating personalized news articles"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.17.0",
    "async-lru>=2.0.5",
    "asyncpg>=0.30.0",
    "crawl4ai>=0.7.6",
    "fastapi>=0.119.1",
    "httpx>=0.28.1",
    "langchain>=1.0.2",
    "langchain-community>=0.4",
    "langchain-mcp-adapters>=0.1.11",
    "langchain-postgres>=0.0.15",
    "langfuse>=3.8.1",
    "langgraph>=1.0.1",
    "langmem>=0.0.28",
    "loguru>=0.7.3",
    "lxml>=5.4.0",
    "pdfminer-six>=20250506",
    "pillow>=11.3.0",
    "plotly>=6.2.0",
    "psycopg[binary]>=3.2.9",
    "pydantic-settings>=2.11.0",
    "pydantic[email]>=2.11.7",
    "pyodbc>=5.3.0",
    "pytest>=8.4.2",
    "python-dotenv>=1.1.1",
    "redis>=7.0.0",
    "rich>=14.2.0",
    "slowapi>=0.1.9",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.38.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pyright>=1.1.406",
    "ruff>=0.14.1",
    "toml-sort>=0.24.3",
    "typos>=1.38.1",
]

[tool.ruff]
line-length = 100
target-version = "py312"
show-fixes = true
unsafe-fixes = true

[tool.ruff.lint]
select = ["I", "F", "E", "W"]  # Import sorting (I), pyflakes (F), pycodestyle (E/W) for blank line checks
ignore = ["E501"] # Let Black handle wrapping, ignore line-too-long rule
pycodestyle.max-doc-length = 300
pydocstyle.convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.isort]
profile = "black"
force_sort_within_sections = true  # ensures alphabetical order inside sections

[tool.black]
line-length = 100

[tool.pyright]
exclude = [
    "**/tests/**",
    "**/__pycache__",
    "**/generated_code/*",
    "**/.venv",
    "**/migrations",
    "**/alembic.ini"
]

[tool.typos.default.extend-words]
teh = "teh"
